name: CI Pipeline

on:
  push:
    branches:
      - feature/ci

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Create .env file from secrets
      run: |
        echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .devcontainer/.env
        echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .devcontainer/.env
        echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .devcontainer/.env
        echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .devcontainer/.env

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: ~/.cache
        key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Build and run docker compose and test
      run: |
        make build
        make up && make test; make down
